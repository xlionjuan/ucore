name: Reusable Build and Push
on:
  workflow_call:
    inputs:
      path:
        description: "The path of the Containerfile, eg. main"
        required: true
        type: string
      push_to_ghcr:
        description: "Push to ghcr.io"
        required: false
        type: boolean
        default: true
      max_space:
        description: "Maximize build space"
        required: false
        type: boolean
        default: false
      tag:
        description: Only one line
        required: true
        type: string
        default: ""
      extra_tags:
        description: |
          "Extra Tags, ONE TAG ONE LINE, ex:
            type=raw,value=test
            type=raw,value=py311
            type=raw,value=py311-{{date 'YYYYMMDD'}}
          "
        required: false
        type: string
        default: ""

permissions:
  contents: read
  packages: write
  id-token: write # needed for signing the images with GitHub OIDC Token
  attestations: write

jobs:
  build-and-push:
    runs-on: ubuntu-24.04

    steps:
      - name: System update
        if: false
        run: sudo apt-get update && sudo apt-get upgrade -y

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Verify
        shell: bash
        run: |
          set -oue pipefail
          echo "---Grep image name---"
          containerfile_path="${{ inputs.path }}/Containerfile"
          image=$(grep -i '^FROM' "$containerfile_path" | awk '{print $2}')
          echo "Image: "${image}""
          echo ""
          echo "Using Cosign to verify image..."
          cosign verify \
            --key https://raw.githubusercontent.com/ublue-os/ucore/refs/heads/main/cosign.pub \
            "${image}"

      - name: Maximize build space
        if: ${{ inputs.max_space == true }}
        uses: ublue-os/remove-unwanted-software@v7

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          tags: |
             type=raw,value=${{ inputs.tag }}-{{date 'YYYYMMDD'}}
             type=raw,value=${{ inputs.tag }}
             ${{ inputs.extra_tags }}
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.description=Custom Ucore image, tag ${{ inputs.tag }}.
            org.opencontainers.image.title=Ucore-${{ inputs.tag }}

      - name: Log in to ghcr.io
        if: ${{ inputs.push_to_ghcr == true }}
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Buildah Action
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          context: ${{ inputs.path }}
          containerfiles: ${{ inputs.path }}/Containerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: true
          extra-args:

      - name: Push
        id: push
        uses: redhat-actions/push-to-registry@v2
        if: ${{ inputs.push_to_ghcr == true }}
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io
          extra-args: |
            --compression-format=zstd

      - name: Sign the images with GitHub OIDC Token
        if: ${{ inputs.push_to_ghcr == true }}
        env:
          DIGEST: ${{ steps.push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}

      - name: Attest
        if: ${{ inputs.push_to_ghcr == true }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
